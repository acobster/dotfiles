#!/usr/bin/env bash
usage() {
  echo 'usage: $(basename $0) [-h|--help] [--no-root]'
  echo '                      [--skip-ssh] [--skip-github] [--skip-profile]'
  echo
  echo '  OPTIONS:'
  echo
  echo '  -h|--help       show this help text'
  echo '  --no-root       install without root'
  echo '  --skip-ssh      do not check or create SSH key'
  echo '  --skip-github   do not authorize GitHub'
  echo '  --skip-profile  do not create /etc/profile.d/nix.sh'
}

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -h|--help)
    # show usage and bail
    usage
    exit
    ;;
    --no-root)
    NO_ROOT='1'
    shift # past argument
    ;;
    --skip-ssh)
    SKIP_SSH='1'
    shift # past argument
    ;;
    --skip-github)
    SKIP_GITHUB='1'
    shift # past argument
    ;;
    --skip-profile)
    SKIP_PROFILE='1'
    shift # past argument
    ;;
    *)
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac

done
set -- "${POSITIONAL[@]}" # restore positional parameters

echo 'Checking for Nix installation...'
if [[ -z $(which nix) ]] ; then
  if [[ "$NO_ROOT" ]] ; then
    echo 'Installing without root...'

    echo 'Installing nix-user-chroot...'
    mkdir -p ~/.local/bin
    export PATH="~/.local/bin:$PATH"
    curl https://github.com/nix-community/nix-user-chroot/releases/download/1.2.2/nix-user-chroot-bin-1.2.2-x86_64-unknown-linux-musl > ~/.local/bin/nix-user-chroot

    if [[ -f /boot/config-$(uname -r) ]] ; then
      if [[ "$(grep CONFIG_USER_NS /boot/config-$(uname -r))" = 'CONFIG_USER_NS=y' ]] ; then
        supports_namespaces=yes
      fi
    else
      if [[ "$(unshare --user --pid echo YES)" = 'YES' ]] ; then
        supports_namespaces=yes
      fi
    fi

    if [[ $supports_namespaces != 'yes' ]] ; then
      echo 'This system does not support user namespaces. Sorry :/'
      exit
    fi

    read -p 'Install Nix store to: (~/.nix) ' store_path
    store_path=${store_path:-"$HOME/.nix"}
    mkdir -m 0755 "$store_path"
    nix-user-chroot "$store_path" bash -c 'curl -L https://nixos.org/nix/install | sh'

    if [[ $? -eq 0 ]] ; then
      echo "Success! You may now start Nix programs by running:"
      echo
      echo "  nix-user-chroot $store_path bash"
      echo
    fi

  else
    echo 'Downloading Nix installer!'
    sh <(curl -L https://nixos.org/nix/install) --daemon
  fi
else
  echo 'Nix detected!'
fi

read -r -d '' NIX_SHELL <<EOF
{ pkgs ? import <nixpkgs> {} }:
pkgs.mkShell {
  packages = with pkgs; [ git curl home-manager gh lolcat ] ;

  NO_ROOT = "$NO_ROOT";
  SKIP_SSH = "$SKIP_SSH";
  SKIP_GITHUB = "$SKIP_GITHUB";
  SKIP_PROFILE = "$SKIP_PROFILE";
}
EOF

read -r -d '' INSTALL_SCRIPT <<'_EOF'
  echo '

░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓████████▓▒░▒▓█▓▒░      ░▒▓██████▓▒░ ░▒▓██████▓▒░░▒▓██████████████▓▒░░▒▓████████▓▒░
░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░
░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░     ░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░
░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓██████▓▒░ ░▒▓█▓▒░     ░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓██████▓▒░
░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░     ░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░
░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░
 ░▒▓█████████████▓▒░░▒▓████████▓▒░▒▓████████▓▒░▒▓██████▓▒░ ░▒▓██████▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓████████▓▒░

' | lolcat

  if [[ -z "$SKIP_SSH" ]] ; then
    echo "Detecting SSH key (for GitHub auth)..."
    read -p "SSH key filename: ($HOME/.ssh/id_ed25519) " ssh_key_filename
    ssh_key_filename=${ssh_key_filename:-"$HOME/.ssh/id_ed25519"}
    if [[ -f "$ssh_key_filename" ]] ; then
      echo "$ssh_key_filename exists! Proceeding with GitHub auth..."
    else
      read -p "SSH identity: (coby@tamayo.email) " ssh_ident
      ssh_ident=${ssh_ident:-"coby@tamayo.email"}
      ssh-keygen -t ed25519 -f "$ssh_key_filename" -C "$ssh_ident"
    fi
  fi

  if [[ -z "$SKIP_GITHUB" ]] ; then
    read -p "Authorize GitHub? (Y/n) " auth_gh
    auth_gh=${auth_gh:-'y'}
    if [[ $auth_gh = 'y' ]] ; then
      gh auth login --git-protocol ssh
    else
      echo 'Skipping GitHub auth...'
    fi
  fi

  if [[ -d ~/dotfiles ]] ; then
    echo "dotfiles already cloned!"
    (
      cd ~/dotfiles
      bin/build home -b backup --extra-experimental-features nix-command --extra-experimental-features flakes
    )
  else
    git clone git@github.com:acobster/dotfiles.git ~/dotfiles
  fi

  echo "Attempting build..."
  (
    cd ~/dotfiles
    bin/build home -b backup --extra-experimental-features nix-command --extra-experimental-features flakes
  )

  if [[ -z "$SKIP_PROFILE" ]] && [[ -z $NO_ROOT ]] ; then
    etc_filepath='/etc/profile.d/nix.sh'
    read -p "Source ~/.profile from $etc_filepath? (Y/n) " source_profile
    source_profile=${source_profile:-'y'}
    if [[ $source_profile = 'y' ]] ; then
      if [[ -f etc_filepath ]] ; then
        echo "$etc_filepath detected!"
      else
        read -r -d '' ETC_PROFILE_DOT_NIX_CONTENT <<'EOF'
if [ -f /home/tamayo/.profile ] ; then
  . /home/tamayo/.profile
fi
EOF

        sudo echo "$ETC_PROFILE_DOT_NIX_CONTENT" > "$etc_filepath"
        if [[ $? -eq 0 ]] ; then
          echo "sourced ~/.profile from $etc_filepath"
        fi
      fi
    fi
  fi

  echo '

░▒▓███████▓▒░ ░▒▓██████▓▒░░▒▓███████▓▒░░▒▓████████▓▒░▒▓█▓▒░
░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░
░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░
░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓██████▓▒░ ░▒▓█▓▒░
░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░
░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░
░▒▓███████▓▒░ ░▒▓██████▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓████████▓▒░▒▓█▓▒░

' | lolcat
_EOF

nix-shell -E "$NIX_SHELL" --run "$INSTALL_SCRIPT"
