#!/usr/bin/env bash

function main() {
  install_ruby
  install_neovim
  install_dotfiles
}

function install_ruby() {
  if [[ -z $(which rbenv) ]] ; then
    git clone https://github.com/rbenv/rbenv.git $HOME/.rbenv
    # redirect stuff to stderr to avoid evaluating output
    echo 'installing rbenv...'
    $(
      cd $HOME/.rbenv
      src/configure >&2
      make -C src >&2
    )

    export PATH="$HOME/.rbenv/bin:$PATH"
  fi

  if ! [[ -d "$(rbenv root)"/plugins ]] ; then
    mkdir -p "$(rbenv root)"/plugins
    git clone https://github.com/rbenv/ruby-build.git "$(rbenv root)"/plugins/ruby-build
  fi

  rbenv install -l
  DEFAULT_RUBY=${DEFAULT_RUBY:-'2.5.1'}
  read -p "pick a version of ruby to install: (${DEFAULT_RUBY}/\"none\" to skip) " -t 10 RBVER

  if [[ "$RBVER" = "none" ]] ; then
    return
  fi
  RBENV=${RBVER:-"$DEFAULT_RUBY"}

  rbenv install "$RBVER"
  rbenv global "$RBVER"
  rbenv rehash

  echo
  echo 'Done!'
  echo
  echo "rbenv global: $(rbenv global)"
  echo
}

function install_neovim() {
  if [[ -z "$(which nvim)" ]] && [[ -z "$SKIP_INSTALL_NEOVIM" ]] ; then
    read -p 'no neovim detected! install? [y/N] ' install
    if [[ "$install" = 'y' ]] ; then
      echo 'adding neovim repository...'
      sudo add-apt-repository ppa:neovim-ppa/stable
      echo 'updating neovim repositories...'
      sudo apt-get update
      echo 'installing neovim...'
      sudo apt-get install -y neovim
    fi

    if [[ "$(which nvim)" ]] ; then
      echo "neovim is now installed at $(which nvim)"
    fi
  fi
}

function install_dotfiles() {
  echo 'setting up dotfiles...'
  $HOME/dotfiles/dtf
}


main

