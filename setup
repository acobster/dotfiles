#!/usr/bin/env bash

DOTFILES_DIR=$(dirname $0)

DEFAULT_RUBY='2.5.1'

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -h|--help)
    # show usage and bail
    usage
    exit
    ;;
    --skip-neovim)
    SKIP_INSTALL_NEOVIM=1
    shift # past argument
    shift # past value
    ;;
    -r|--ruby-version)
    RUBY_VERSION="$2"
    shift # past argument
    shift # past value
    ;;
    *)
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters


function main() {
  install_ruby
  install_neovim
  install_golang
  install_dotfiles
}

function install_ruby() {
  if [[ -z $(which rbenv) ]] ; then
    git clone https://github.com/rbenv/rbenv.git $HOME/.rbenv
    # redirect stuff to stderr to avoid evaluating output
    echo 'installing rbenv...'
    $(
      cd $HOME/.rbenv
      src/configure >&2
      make -C src >&2
    )

    export PATH="$HOME/.rbenv/bin:$PATH"
  fi

  if ! [[ -d "$(rbenv root)"/plugins ]] ; then
    echo 'installing ruby-build...'
    mkdir -p "$(rbenv root)"/plugins
    git clone https://github.com/rbenv/ruby-build.git "$(rbenv root)"/plugins/ruby-build
  fi

  if [[ -z "$RUBY_VERSION" ]] ; then
    # no --ruby-version opt given

    rbenv install -l
    read -p "pick a version of ruby to install: (${DEFAULT_RUBY}/\"none\" to skip) " -t 10 RUBY_VERSION

    if [[ "$RUBY_VERSION" = "none" ]] ; then
      return
    fi
    RUBY_VERSION=${RUBY_VERSION:-"$DEFAULT_RUBY"}
  fi

  echo "Installing ruby ${RUBY_VERSION}..."
  rbenv install "$RUBY_VERSION"
  rbenv global "$RUBY_VERSION"
  rbenv rehash

  echo
  echo 'Done!'
  echo
  echo "rbenv global: $(rbenv global)"
  echo
}

function install_neovim() {
  if [[ -z "$(which nvim)" ]] && [[ -z "$SKIP_INSTALL_NEOVIM" ]] ; then
    read -p 'no neovim detected! install? [y/N] ' install
    if [[ "$install" = 'y' ]] ; then
      echo 'adding neovim repository...'
      sudo add-apt-repository ppa:neovim-ppa/stable
      echo 'updating neovim repositories...'
      sudo apt-get update
      echo 'installing neovim...'
      sudo apt-get install -y neovim
    fi

    if [[ "$(which nvim)" ]] ; then
      echo "neovim is now installed at $(which nvim)"
    fi
  fi
}

function install_golang() {
  if [[ -z "$(which go)" ]] ; then
    echo 'installing go...'

    wget https://dl.google.com/go/go1.11.linux-amd64.tar.gz
    sudo tar -C /usr/local -xzvf go1.11.linux-amd64.tar.gz
    export PATH=/usr/local/go/bin:$PATH
    rm go1.11.linux-amd64.tar.gz

    if [[ "$(which go)" ]] ; then
      echo "go is not installed at $(which go)"
    else
      echo 'no go binary detected after install process!!'
    fi

  fi
}

function install_dotfiles() {
  echo 'setting up dotfiles...'
  $DOTFILES_DIR/dtf
}


main

